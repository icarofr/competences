services:
  website:
    env_file: ./website/.env.local
    build:
      context: ./website
      dockerfile: ./Dockerfile
    container_name: "${WEBSITE_CONTAINER_NAME}"
    restart: always
    ports:
      - "${WEBSITE_PORTS}"
    networks:
      - sound-network
      - proxy
    volumes:
      - ./website/public:/app/public
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${WEBSITE_CONTAINER_NAME}.rule=${WEBSITE_TRAEFIK_HOSTS}"
      - "traefik.http.services.${WEBSITE_CONTAINER_NAME}.loadbalancer.server.port=${WEBSITE_TRAEFIK_PORT}"
      - "traefik.http.routers.${WEBSITE_CONTAINER_NAME}.tls=true"
      - "traefik.http.routers.${WEBSITE_CONTAINER_NAME}.tls.certresolver=letsencrypt"
      - "traefik.docker.network=proxy"

  db:
    image: postgres:16
    container_name: "${DB_CONTAINER_NAME}"
    restart: always
    env_file: ./db/.env
    ports:
      - "${DB_PORTS}"
    networks:
      - sound-network
    volumes:
      - ./postgres/data:/var/lib/postgresql/data

  api:
    env_file: ./api/.env
    build:
      context: ./api
      dockerfile: ./Dockerfile
    container_name: "${API_CONTAINER_NAME}"
    restart: always
    ports:
      - "${API_PORTS}"
    networks:
      - sound-network
      - proxy
    depends_on:
      - db
    volumes:
      - ./samples:/usr/src/samples
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${API_CONTAINER_NAME}.rule=${API_TRAEFIK_HOSTS}"
      - "traefik.http.services.${API_CONTAINER_NAME}.loadbalancer.server.port=${API_TRAEFIK_PORT}"
      - "traefik.http.routers.${API_CONTAINER_NAME}.tls=true"
      - "traefik.http.routers.${API_CONTAINER_NAME}.tls.certresolver=letsencrypt"
      - "traefik.docker.network=proxy"

  nginx:
    image: nginx:latest
    container_name: "${NGINX_CONTAINER_NAME}"
    restart: always
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./samples:/usr/share/nginx/html:ro
    ports:
      - "${NGINX_CONTAINER_PORTS}"
    networks:
      - sound-network
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${NGINX_CONTAINER_NAME}.rule=${NGINX_TRAEFIK_HOSTS}"
      - "traefik.http.services.${NGINX_CONTAINER_NAME}.loadbalancer.server.port=80"
      - "traefik.http.routers.${NGINX_CONTAINER_NAME}.tls=true"
      - "traefik.http.routers.${NGINX_CONTAINER_NAME}.tls.certresolver=letsencrypt"
      - "traefik.docker.network=proxy"

  spotdl:
    build:
      context: ./spotdl
      dockerfile: ./Dockerfile
    container_name: "${SPOTDL_CONTAINER_NAME}"
    restart: always
    networks:
      - proxy
    ports:
      - "${SPOTDL_PORTS}"
    volumes:
      - ./spotdl/tracks:/app/tracks
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SPOTDL_CONTAINER_NAME}.rule=${SPOTDL_TRAEFIK_HOSTS}"
      - "traefik.http.services.${SPOTDL_CONTAINER_NAME}.loadbalancer.server.port=3002"
      - "traefik.http.routers.${SPOTDL_CONTAINER_NAME}.tls=true"
      - "traefik.http.routers.${SPOTDL_CONTAINER_NAME}.tls.certresolver=letsencrypt"
      - "traefik.docker.network=proxy"

networks:
  sound-network:
    driver: bridge
  proxy:
    external: true
